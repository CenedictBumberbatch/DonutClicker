@page "/"

@inject ISyncLocalStorageService _localstorage;

<PageTitle>Donut Clicker</PageTitle>

<head>
    <link rel="stylesheet" type="text/css" href="./css/styles.css?v=1">
    <link rel='stylesheet' type='text/css' href='https://fonts.googleapis.com/css?family=Lato'>
</head>

<body>
    <div class="game">
        <div class="header">
            <img src="assets/coin.png" alt="coin" />
            <h2 class="score" id="score">@CurrentCount</h2>
        </div>
        <div class="circle">
            <button class="@MyStyle" @onclick="IncrementCoinCount"></button>
        </div>
        <div class="restart"
            <button @onclick="ResetProgress">Reset</button>
        </div>
    </div>
   
</body>

@code {

    private const string LocalStorageKey = "currentCoinCount";

    private int CurrentCount;
    private string MyStyle = string.Empty;

    protected override void OnInitialized()
    {
        GetCoinCount();
        MyStyle = GetImageStyle();
    }

    private void GetCoinCount()
    {
        //If exists, just get it from localstorage
        if (_localstorage.ContainKey(LocalStorageKey))
        {
            CurrentCount = _localstorage.GetItem<int>(LocalStorageKey);
        }
        else
        {
            //Initialize it by 0 value
            SetCoinCount(0);
            CurrentCount = 0;
        }
    }

    private void SetCoinCount(int count) => _localstorage.SetItem<int>(LocalStorageKey, count);

    private void IncrementCoinCount()
    {
        CurrentCount++;
        SetCoinCount(CurrentCount);

        if (ShouldChangeImageStyle())
        {
            MyStyle = GetImageStyle();
            StateHasChanged();
        }
    }

    private string GetImageStyle()
    {
        switch (CurrentCount)
        {
            case < 50:
                return "btn-1";

            case >= 50 and < 200:
                return "btn-2"; 

            default:
                return "btn-1";
        }
    }

    private bool ShouldChangeImageStyle()
    {
        switch (CurrentCount)
        {
            case 50:
            case 200:
                return true;
        }
        return false;
    }

    private void ResetProgress()
    {
        CurrentCount = 0;
        SetCoinCount(0);
        OnInitialized();
    }
}